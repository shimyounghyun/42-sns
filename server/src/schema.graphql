type Chat {
  id: Int!
  messages: [Message]!
  participants: [User]!
  trip: Trip
  createdAt: String!
  updatedAt: String
}

type Message {
  id: Int!
  text: String!
  chat: Chat!
  user: User!
  createdAt: String!
  updatedAt: String
}

type Date {
  id: Int!
  time: String!
  trips: [Trip]
  createdAt: String!
  updatedAt: String
}

type Place {
  id: Int!
  name: String!
  lat: Float!
  lng: Float!
  address: String!
  trips: [Trip]
  createdAt: String!
  updatedAt: String
}

type Trip {
  id: Int!
  status: String!
  host: User!
  guest: User
  dates: [Date]
  chat: Chat
  place: Place
  createdAt: String!
  updatedAt: String
}

type IntraConnectResponse {
  result: Boolean!
  error: String
  token: String
}

type Mutation {
  IntraConnect(email: String!, userName: String!, firstName: String!, lastName: String!, profilePhoto: String!, intraId: String!): IntraConnectResponse
}

type User {
  id: Int!
  email: String!
  userName: String!
  firstName: String!
  lastName: String!
  fullName: String
  profilePhoto: String!
  bio: String
  password: String!
  chats: [Chat]
  messages: [Message]
  tripAsHost: [Trip]
  tripAsGuest: [Trip]
  intraId: String!
  createdAt: String!
  updatedAt: String
}

type Query {
  user: User
}
